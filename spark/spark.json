{
    "command-line": "$SPARK_DIR/run_SPark.sh \"[FMRI_DATA]\" [GREY_MATTER_MASK] [NUMBER_OF_RESAMPLING] \"[NETWORK_SCALES]\" [NUMBER_OF_ITERATIONS] [P_VALUE] resamplingMethod [RESAMPLING_METHOD] blockWindowLength \"[BLOCK_WINDOW_LENGTH]\" dictionaryInitMethod [DICTIONARY_INIT_METHOD] sparseCodingMethod [SPARSE_CODING_METHOD] preserveAtomsDict [PRESERVE_ATOMS_DICT]",
    "container-image": {
        "image": "spark",
        "type": "singularity"
    },
    "name": "SPARK",
    "author": "Obaï Bin Ka’b Ali",
    "description": "SParsity-based Analysis of Reliable K-hubness for Brain Functional Connectivity fMRI",
    "inputs": [
        {
            "id": "fmri_data",
            "name": "Preprocessed fMRI data",
            "description": "4-D image: 3-D space + time; MINC or NIfTI format",
            "type": "File",
            "list": true,
            "list-separator": ",",
            "optional": false,
            "value-key": "[FMRI_DATA]"
        },
        {
            "id": "grey_matter_mask",
            "name": "Grey matter mask",
            "description": "3-D image; MINC or NIfTI format",
            "type": "File",
            "optional": false,
            "value-key": "[GREY_MATTER_MASK]"
        },
        {
            "id": "number_of_resampling",
            "name": "Number of resampling",
            "description": "Number of bootstrap resampling at the individual level. A recommended value is 100.",
            "type": "Number",
            "integer": true,
            "minimum": 2,
            "optional": false,
            "value-key": "[NUMBER_OF_RESAMPLING]"
        },
        {
            "id": "resampling_method",
            "name": "Resampling method",
            "description": "Method (from NIAK) used to resample the data under the null hypothesis. Note: If 'CBB' is selected, the option 'Block window length' is used.",
            "type": "String",
            "optional": true,
            "value-choices": [
                "CBB",
                "AR1B",
                "AR1G"
            ],
            "value-disables": {
                "CBB": [
                ],
                "AR1B": [
                    "block_window_length"
                ],
                "AR1G": [
                    "block_window_length"
                ]
            },
            "value-requires": {
                "CBB": [
                    "block_window_length"
                ],
                "AR1B": [
                ],
                "AR1G": [
                ]
            },
            "default-value": "CBB",
            "command-line-flag": "resamplingMethod",
            "value-key": "[RESAMPLING_METHOD]"
        },
        {
            "id": "block_window_length",
            "name": "Block window length",
            "description": "Three numbers, respectively '[begin] [step] [end]', used to create a regularly-spaced vector. In order to specify a single number, for instance '15', enter the same number for [begin] and [end], for instance '15 1 15'. A number in this vector corresponds to a window length used in the circular block bootstrap. The unit of the window length is 'time-point', with each time-point indicating a 3D scan at each TR. If multiple numbers are specified, then a number is randomly selected from the list at each resampling. It is recommended to use a minimum of sqrt(T), where T is the total number of time points in the fMRI time-course. It is also recommended to randomize the window length to reduce a bias by window size.",
            "type": "Number",
            "integer": true,
            "list": true,
            "optional": true,
            "minimum": 1,
            "min-list-entries": 3,
            "max-list-entries": 3,
            "default-value": [10, 1, 30],
            "command-line-flag": "blockWindowLength",
            "value-key": "[BLOCK_WINDOW_LENGTH]"
        },
        {
            "id": "network_scales",
            "name": "Network scales",
            "description": "Three numbers, respectively '[begin] [step] [end]' used to create a regularly-spaced vector. In order to specify a single number, for instance '15', enter the same number for [begin] and [end], for instance '15 1 15'. This vector of numbers corresponds to the range of network scales to be tested. An optimal network scale is estimated from the specified set of numbers. A recommended value is '10 2 30'.",
            "type": "Number",
            "integer": true,
            "list": true,
            "optional": false,
            "minimum": 1,
            "min-list-entries": 3,
            "max-list-entries": 3,
            "value-key": "[NETWORK_SCALES]"
        },
        {
            "id": "number_of_iterations",
            "name": "Number of iterations",
            "description": "A recommended value is 20.",
            "type": "Number",
            "integer": true,
            "optional": false,
            "minimum": 2,
            "value-key": "[NUMBER_OF_ITERATIONS]"
        },
        {
            "id": "dictionary_init_method",
            "name": "Dictionary initialization method",
            "description": "If 'GivenMatrix' is selected, then the dictionary will be initialized by a random permutation of the raw data obtained in step 1. If 'DataElements' is selected, then the dictionary will be initialized by the first N (number of atoms) columns in the raw data obtained in step 1.",
            "type": "String",
            "value-choices": [
                "GivenMatrix",
                "DataElements"
            ],
            "default-value": "GivenMatrix",
            "optional": true,
            "command-line-flag": "dictionaryInitMethod",
            "value-key": "[DICTIONARY_INIT_METHOD]"
        },
        {
            "id": "sparse_coding_method",
            "name": "Sparse coding method",
            "type": "String",
            "value-choices": [
                "OMP",
                "Thresholding"
            ],
            "default-value": "Thresholding",
            "optional": true,
            "command-line-flag": "sparseCodingMethod",
            "value-key": "[SPARSE_CODING_METHOD]"
        },
        {
            "id": "preserve_atoms_dict",
            "name": "Preserve atoms dictionary flag",
            "description": "If set to false, then the first N-1 atoms will be trained and updated while the last one will be fixed as a constant vector (of 1).",
            "type": "Number",
            "integer": true,
            "optional": true,
            "value-choices": [
                0,
                1
            ],
            "default-value": 1,
            "command-line-flag": "preserveAtomsDict",
            "value-key": "[PRESERVE_ATOMS_DICT]"
        },
        {
            "id": "p_value",
            "name": "P-Value",
            "description": "Significance level, using a Z-test, for removing inconsistent elements in the average sparse coefficients (considered as the Gaussian noise) after spatial clustering using the threshold kth.",
            "type": "Number",
            "optional": false,
            "minimum": 0,
            "maximum": 1,
            "value-key": "[P_VALUE]"
        }
    ],
    "output-files": [
        {
            "id": "k_hubness_map",
            "name": "k-hubness map",
            "description": "3D image, MINC or NIfTI format",
            "path-template": "k-hubness-map.*",
            "optional": false
        },
        {
            "id": "atom_maps",
            "name": "Atom maps",
            "description": "3D image, MINC or NIfTI format",
            "path-template": "atom-maps.*",
            "optional": false
        },
        {
            "id": "intermediate_files",
            "name": "Intermediate files",
            "path-template": "*",
            "list": true,
            "optional": false
        }
    ],
    "groups": [
        {
            "id": "bootstrap_resampling",
            "name": "Step 1: Bootstrap resampling",
            "members": [
                "number_of_resampling",
                "resampling_method",
                "block_window_length"
            ]
        },
        {
            "id": "sparse_dict_learning",
            "name": "Step 2: Sparse dictionary learning",
            "members": [
                "network_scales",
                "number_of_iterations",
                "dictionary_init_method",
                "sparse_coding_method",
                "preserve_atoms_dict"
            ]
        },
        {
            "id": "k_hubness_map_generation",
            "name": "Step 4: k-hubness map generation",
            "members": [
                "p_value"
            ]
        }
    ],
    "schema-version": "0.5",
    "tags": {
        "domain": "neuroinformatics"
    },
    "tool-version": "1.0"
}
