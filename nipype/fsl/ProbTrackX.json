{
    "name": "ProbTrackX",
    "command-line": "ProbTrackX [AVOID_MP] [C_THRESH] [CORRECT_PATH_DISTRIBUTION] [DIST_THRESH] [FIBST] [FORCE_DIR] [FSAMPLES] [INV_XFM] [LOOP_CHECK] [MASK] [MASK2] [MESH] [MOD_EULER] [MODE] [N_SAMPLES] [N_STEPS] [NETWORK] [OPD] [OS2T] [OUT_DIR] [PHSAMPLES] [RAND_FIB] [RANDOM_SEED] [S2TASTEXT] [SAMPLE_RANDOM_POINTS] [SAMPLES_BASE_NAME] [SEED] [SEED_REF] [STEP_LENGTH] [STOP_MASK] [TARGET_MASKS] [THSAMPLES] [USE_ANISOTROPY] [VERBOSE] [WAYPOINTS] [XFM]",
    "author": "Nipype (interface), Oxford Centre for Functional MRI of the Brain (FMRIB) (tool)",
    "description": "ProbTrackX, as implemented in Nipype (module: nipype.interfaces.fsl, interface: ProbTrackX).",
    "inputs": [
        {
            "id": "avoid_mp",
            "name": "Avoid mp",
            "type": "File",
            "value-key": "[AVOID_MP]",
            "command-line-flag": "--avoid=",
            "description": "An existing file name. Reject pathways passing through locations given by this mask.",
            "optional": true
        },
        {
            "id": "c_thresh",
            "name": "C thresh",
            "type": "Number",
            "value-key": "[C_THRESH]",
            "command-line-flag": "--cthr=",
            "description": "A float. Curvature threshold - default=0.2.",
            "optional": true
        },
        {
            "id": "correct_path_distribution",
            "name": "Correct path distribution",
            "type": "Flag",
            "value-key": "[CORRECT_PATH_DISTRIBUTION]",
            "command-line-flag": "--pd",
            "description": "A boolean. Correct path distribution for the length of the pathways.",
            "optional": true
        },
        {
            "id": "dist_thresh",
            "name": "Dist thresh",
            "type": "Number",
            "value-key": "[DIST_THRESH]",
            "command-line-flag": "--distthresh=",
            "description": "A float. Discards samples shorter than this threshold (in mm - default=0).",
            "optional": true
        },
        {
            "id": "fibst",
            "name": "Fibst",
            "type": "Number",
            "integer": true,
            "value-key": "[FIBST]",
            "command-line-flag": "--fibst=",
            "description": "An integer (int or long). Force a starting fibre for tracking - default=1, i.e. first fibre orientation. only works if randfib==0.",
            "optional": true
        },
        {
            "id": "force_dir",
            "name": "Force dir",
            "type": "Flag",
            "value-key": "[FORCE_DIR]",
            "command-line-flag": "--forcedir",
            "description": "A boolean. Use the actual directory name given - i.e. do not add + to make a new directory.",
            "optional": true,
            "default-value": true
        },
        {
            "id": "fsamples",
            "name": "Fsamples",
            "type": "File",
            "list": true,
            "value-key": "[FSAMPLES]",
            "description": "A list of items which are an existing file name. No description provided.",
            "optional": false
        },
        {
            "id": "inv_xfm",
            "name": "Inv xfm",
            "type": "File",
            "value-key": "[INV_XFM]",
            "command-line-flag": "--invxfm=",
            "description": "A file name. Transformation matrix taking dti space to seed space (compulsory when using a warp_field for seeds_to_dti).",
            "optional": true
        },
        {
            "id": "loop_check",
            "name": "Loop check",
            "type": "Flag",
            "value-key": "[LOOP_CHECK]",
            "command-line-flag": "--loopcheck",
            "description": "A boolean. Perform loop_checks on paths - slower, but allows lower curvature threshold.",
            "optional": true
        },
        {
            "id": "mask",
            "name": "Mask",
            "type": "File",
            "value-key": "[MASK]",
            "command-line-flag": "-m",
            "description": "An existing file name. Bet binary mask file in diffusion space.",
            "optional": false
        },
        {
            "id": "mask2",
            "name": "Mask2",
            "type": "File",
            "value-key": "[MASK2]",
            "command-line-flag": "--mask2=",
            "description": "An existing file name. Second bet binary mask (in diffusion space) in twomask_symm mode.",
            "optional": true
        },
        {
            "id": "mesh",
            "name": "Mesh",
            "type": "File",
            "value-key": "[MESH]",
            "command-line-flag": "--mesh=",
            "description": "An existing file name. Freesurfer-type surface descriptor (in ascii format).",
            "optional": true
        },
        {
            "id": "mod_euler",
            "name": "Mod euler",
            "type": "Flag",
            "value-key": "[MOD_EULER]",
            "command-line-flag": "--modeuler",
            "description": "A boolean. Use modified euler streamlining.",
            "optional": true
        },
        {
            "id": "mode",
            "name": "Mode",
            "type": "String",
            "value-key": "[MODE]",
            "command-line-flag": "--mode=",
            "description": "'simple' or 'two_mask_symm' or 'seedmask'. Options: simple (single seed voxel), seedmask (mask of seed voxels), twomask_symm (two bet binary masks).",
            "optional": true,
            "value-choices": [
                "simple",
                "two_mask_symm",
                "seedmask"
            ]
        },
        {
            "id": "n_samples",
            "name": "N samples",
            "type": "Number",
            "integer": true,
            "value-key": "[N_SAMPLES]",
            "command-line-flag": "--nsamples=",
            "description": "An integer (int or long). Number of samples - default=5000.",
            "optional": true,
            "default-value": 5000
        },
        {
            "id": "n_steps",
            "name": "N steps",
            "type": "Number",
            "integer": true,
            "value-key": "[N_STEPS]",
            "command-line-flag": "--nsteps=",
            "description": "An integer (int or long). Number of steps per sample - default=2000.",
            "optional": true
        },
        {
            "id": "network",
            "name": "Network",
            "type": "Flag",
            "value-key": "[NETWORK]",
            "command-line-flag": "--network",
            "description": "A boolean. Activate network mode - only keep paths going through at least one seed mask (required if multiple seed masks).",
            "optional": true
        },
        {
            "id": "opd",
            "name": "Opd",
            "type": "Flag",
            "value-key": "[OPD]",
            "command-line-flag": "--opd",
            "description": "A boolean. Outputs path distributions.",
            "optional": true,
            "default-value": true
        },
        {
            "id": "os2t",
            "name": "Os2t",
            "type": "Flag",
            "value-key": "[OS2T]",
            "command-line-flag": "--os2t",
            "description": "A boolean. Outputs seeds to targets.",
            "optional": true
        },
        {
            "id": "out_dir",
            "name": "Out dir",
            "type": "File",
            "value-key": "[OUT_DIR]",
            "command-line-flag": "--dir=",
            "description": "An existing directory name. Directory to put the final volumes in.",
            "optional": true
        },
        {
            "id": "phsamples",
            "name": "Phsamples",
            "type": "File",
            "list": true,
            "value-key": "[PHSAMPLES]",
            "description": "A list of items which are an existing file name. No description provided.",
            "optional": false
        },
        {
            "id": "rand_fib",
            "name": "Rand fib",
            "type": "Number",
            "value-key": "[RAND_FIB]",
            "command-line-flag": "--randfib=",
            "description": "0 or 1 or 2 or 3. Options: 0 - default, 1 - to randomly sample initial fibres (with f > fibthresh), 2 - to sample in proportion fibres (with f>fibthresh) to f, 3 - to sample all populations at random (even if f<fibthresh).",
            "optional": true,
            "integer": true,
            "value-choices": [
                0,
                1,
                2,
                3
            ]
        },
        {
            "id": "random_seed",
            "name": "Random seed",
            "type": "Flag",
            "value-key": "[RANDOM_SEED]",
            "command-line-flag": "--rseed",
            "description": "A boolean. Random seed.",
            "optional": true
        },
        {
            "id": "s2tastext",
            "name": "S2tastext",
            "type": "Flag",
            "value-key": "[S2TASTEXT]",
            "command-line-flag": "--s2tastext",
            "description": "A boolean. Output seed-to-target counts as a text file (useful when seeding from a mesh).",
            "optional": true
        },
        {
            "id": "sample_random_points",
            "name": "Sample random points",
            "type": "Flag",
            "value-key": "[SAMPLE_RANDOM_POINTS]",
            "command-line-flag": "--sampvox",
            "description": "A boolean. Sample random points within seed voxels.",
            "optional": true
        },
        {
            "id": "samples_base_name",
            "name": "Samples base name",
            "type": "String",
            "value-key": "[SAMPLES_BASE_NAME]",
            "command-line-flag": "--samples=",
            "description": "A unicode string. The rootname/base_name for samples files.",
            "optional": true,
            "default-value": "merged"
        },
        {
            "id": "seed",
            "name": "Seed",
            "type": "File",
            "value-key": "[SEED]",
            "command-line-flag": "--seed=",
            "description": "An existing file name or a list of items which are an existing file name or a list of items which are a list of from 3 to 3 items which are an integer (int or long). Seed volume(s), or voxel(s) or freesurfer label file.",
            "optional": true
        },
        {
            "id": "seed_2",
            "name": "Seed",
            "type": "File",
            "list": true,
            "value-key": "[SEED]",
            "command-line-flag": "--seed=",
            "description": "An existing file name or a list of items which are an existing file name or a list of items which are a list of from 3 to 3 items which are an integer (int or long). Seed volume(s), or voxel(s) or freesurfer label file.",
            "optional": true
        },
        {
            "id": "seed_3",
            "name": "Seed",
            "type": "String",
            "list": true,
            "value-key": "[SEED]",
            "command-line-flag": "--seed=",
            "description": "An existing file name or a list of items which are an existing file name or a list of items which are a list of from 3 to 3 items which are an integer (int or long). Seed volume(s), or voxel(s) or freesurfer label file.",
            "optional": true
        },
        {
            "id": "seed_ref",
            "name": "Seed ref",
            "type": "File",
            "value-key": "[SEED_REF]",
            "command-line-flag": "--seedref=",
            "description": "An existing file name. Reference vol to define seed space in simple mode - diffusion space assumed if absent.",
            "optional": true
        },
        {
            "id": "step_length",
            "name": "Step length",
            "type": "Number",
            "value-key": "[STEP_LENGTH]",
            "command-line-flag": "--steplength=",
            "description": "A float. Step_length in mm - default=0.5.",
            "optional": true
        },
        {
            "id": "stop_mask",
            "name": "Stop mask",
            "type": "File",
            "value-key": "[STOP_MASK]",
            "command-line-flag": "--stop=",
            "description": "An existing file name. Stop tracking at locations given by this mask file.",
            "optional": true
        },
        {
            "id": "target_masks",
            "name": "Target masks",
            "type": "File",
            "list": true,
            "value-key": "[TARGET_MASKS]",
            "command-line-flag": "--targetmasks=",
            "description": "A list of items which are a file name. List of target masks - required for seeds_to_targets classification.",
            "optional": true
        },
        {
            "id": "thsamples",
            "name": "Thsamples",
            "type": "File",
            "list": true,
            "value-key": "[THSAMPLES]",
            "description": "A list of items which are an existing file name. No description provided.",
            "optional": false
        },
        {
            "id": "use_anisotropy",
            "name": "Use anisotropy",
            "type": "Flag",
            "value-key": "[USE_ANISOTROPY]",
            "command-line-flag": "--usef",
            "description": "A boolean. Use anisotropy to constrain tracking.",
            "optional": true
        },
        {
            "id": "verbose",
            "name": "Verbose",
            "type": "Number",
            "value-key": "[VERBOSE]",
            "command-line-flag": "--verbose=",
            "description": "0 or 1 or 2. Verbose level, [0-2]. level 2 is required to output particle files.",
            "optional": true,
            "integer": true,
            "value-choices": [
                0,
                1,
                2
            ]
        },
        {
            "id": "waypoints",
            "name": "Waypoints",
            "type": "File",
            "value-key": "[WAYPOINTS]",
            "command-line-flag": "--waypoints=",
            "description": "An existing file name. Waypoint mask or ascii list of waypoint masks - only keep paths going through all the masks.",
            "optional": true
        },
        {
            "id": "xfm",
            "name": "Xfm",
            "type": "File",
            "value-key": "[XFM]",
            "command-line-flag": "--xfm=",
            "description": "An existing file name. Transformation matrix taking seed space to dti space (either flirt matrix or fnirt warp_field) - default is identity.",
            "optional": true
        }
    ],
    "output-files": [
        {
            "name": "Fdt paths",
            "id": "fdt_paths",
            "path-template": "fdt_paths.nii",
            "optional": true,
            "description": "A list of items which are an existing file name. Path/name of a 3d image file containing the output connectivity distribution to the seed mask."
        },
        {
            "name": "Log",
            "id": "log",
            "path-template": "probtrackx.log",
            "optional": true,
            "description": "An existing file name. Path/name of a text record of the command that was run."
        },
        {
            "name": "Particle files",
            "id": "particle_files",
            "path-template": "*",
            "optional": true,
            "description": "A list of items which are an existing file name. Files describing all of the tract samples. generated only if verbose is set to 2."
        },
        {
            "name": "Targets",
            "id": "targets",
            "path-template": "targets",
            "optional": true,
            "description": "A list of items which are an existing file name. A list with all generated seeds_to_target files."
        },
        {
            "name": "Way total",
            "id": "way_total",
            "path-template": "way_total",
            "optional": true,
            "description": "An existing file name. Path/name of a text file containing a single number corresponding to the total number of generated tracts that have not been rejected by inclusion/exclusion mask criteria."
        }
    ],
    "groups": [
        {
            "id": "seed_group",
            "name": "Seed group",
            "members": [
                "seed",
                "seed_2",
                "seed_3"
            ],
            "mutually-exclusive": true
        }
    ],
    "tool-version": "No version provided.",
    "schema-version": "0.5",
    "container-image": {
        "image": "mcin/docker-fsl:latest",
        "type": "docker",
        "index": "index.docker.io"
    }
}