{
    "name": "TractSkeleton",
    "command-line": "TractSkeleton [ALT_DATA_FILE] [ALT_SKELETON] [DATA_FILE] [DISTANCE_MAP] [IN_FILE] [PROJECT_DATA] [PROJECTED_DATA] [SEARCH_MASK_FILE] [SKELETON_FILE] [THRESHOLD] [USE_CINGULUM_MASK]",
    "author": "Nipype (interface), Oxford Centre for Functional MRI of the Brain (FMRIB) (tool)",
    "description": "TractSkeleton, as implemented in Nipype (module: nipype.interfaces.fsl, interface: TractSkeleton).",
    "inputs": [
        {
            "id": "alt_data_file",
            "name": "Alt data file",
            "type": "File",
            "value-key": "[ALT_DATA_FILE]",
            "command-line-flag": "-a",
            "description": "An existing file name. 4d non-fa data to project onto skeleton.",
            "optional": true
        },
        {
            "id": "alt_skeleton",
            "name": "Alt skeleton",
            "type": "File",
            "value-key": "[ALT_SKELETON]",
            "command-line-flag": "-s",
            "description": "An existing file name. Alternate skeleton to use.",
            "optional": true
        },
        {
            "id": "data_file",
            "name": "Data file",
            "type": "File",
            "value-key": "[DATA_FILE]",
            "description": "An existing file name. 4d data to project onto skeleton (usually fa).",
            "optional": true
        },
        {
            "id": "distance_map",
            "name": "Distance map",
            "type": "File",
            "value-key": "[DISTANCE_MAP]",
            "description": "An existing file name. Distance map image.",
            "optional": true
        },
        {
            "id": "in_file",
            "name": "In file",
            "type": "File",
            "value-key": "[IN_FILE]",
            "command-line-flag": "-i",
            "description": "An existing file name. Input image (typcially mean fa volume).",
            "optional": false
        },
        {
            "id": "project_data",
            "name": "Project data",
            "type": "Flag",
            "value-key": "[PROJECT_DATA]",
            "command-line-flag": "-p",
            "description": "A boolean. Project data onto skeleton.",
            "optional": true
        },
        {
            "id": "projected_data",
            "name": "Projected data",
            "type": "File",
            "value-key": "[PROJECTED_DATA]",
            "description": "A file name. Input data projected onto skeleton.",
            "optional": true
        },
        {
            "id": "search_mask_file",
            "name": "Search mask file",
            "type": "File",
            "value-key": "[SEARCH_MASK_FILE]",
            "description": "An existing file name. Mask in which to use alternate search rule.",
            "optional": true
        },
        {
            "id": "skeleton_file",
            "name": "Skeleton file",
            "type": "Flag",
            "value-key": "[SKELETON_FILE]",
            "command-line-flag": "-o",
            "description": "A boolean or a file name. Write out skeleton image.",
            "optional": true
        },
        {
            "id": "skeleton_file_2",
            "name": "Skeleton file",
            "type": "File",
            "value-key": "[SKELETON_FILE]",
            "command-line-flag": "-o",
            "description": "A boolean or a file name. Write out skeleton image.",
            "optional": true
        },
        {
            "id": "threshold",
            "name": "Threshold",
            "type": "Number",
            "value-key": "[THRESHOLD]",
            "description": "A float. Skeleton threshold value.",
            "optional": true
        },
        {
            "id": "use_cingulum_mask",
            "name": "Use cingulum mask",
            "type": "Flag",
            "value-key": "[USE_CINGULUM_MASK]",
            "command-line-flag": "--use_cingulum_mask",
            "description": "A boolean. Perform alternate search using built-in cingulum mask.",
            "optional": true,
            "default-value": true
        }
    ],
    "output-files": [
        {
            "name": "Projected data",
            "id": "projected_data_outfile",
            "path-template": "[PROJECTED_DATA]",
            "optional": true,
            "description": "A file name. Input data projected onto skeleton."
        },
        {
            "name": "Skeleton file",
            "id": "skeleton_file_outfile",
            "path-template": "[SKELETON_FILE]",
            "optional": true,
            "description": "A file name. Tract skeleton image."
        }
    ],
    "groups": [
        {
            "id": "skeleton_file_group",
            "name": "Skeleton file group",
            "members": [
                "skeleton_file",
                "skeleton_file_2"
            ],
            "mutually-exclusive": true
        },
        {
            "id": "all_or_none_group",
            "name": "All or none group",
            "members": [
                "project_data",
                "threshold",
                "data_file",
                "distance_map"
            ],
            "all-or-none": true
        },
        {
            "id": "mutex_group",
            "name": "Mutex group",
            "members": [
                "search_mask_file",
                "use_cingulum_mask"
            ],
            "mutually-exclusive": true
        }
    ],
    "tool-version": "No version provided.",
    "schema-version": "0.5",
    "container-image": {
        "image": "mcin/docker-fsl:latest",
        "type": "docker",
        "index": "index.docker.io"
    }
}