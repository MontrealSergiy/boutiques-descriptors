{
    "name": "ApplyWarp",
    "command-line": "ApplyWarp [ABSWARP] [DATATYPE] [FIELD_FILE] [IN_FILE] [INTERP] [MASK_FILE] [OUT_FILE] [POSTMAT] [PREMAT] [REF_FILE] [RELWARP] [SUPERLEVEL] [SUPERSAMPLE]",
    "author": "Nipype (interface), Oxford Centre for Functional MRI of the Brain (FMRIB) (tool)",
    "description": "ApplyWarp, as implemented in Nipype (module: nipype.interfaces.fsl, interface: ApplyWarp).",
    "inputs": [
        {
            "id": "abswarp",
            "name": "Abswarp",
            "type": "Flag",
            "value-key": "[ABSWARP]",
            "command-line-flag": "--abs",
            "description": "A boolean. Treat warp field as absolute: x' = w(x).",
            "optional": true
        },
        {
            "id": "datatype",
            "name": "Datatype",
            "type": "String",
            "value-key": "[DATATYPE]",
            "command-line-flag": "--datatype=",
            "description": "'char' or 'short' or 'int' or 'float' or 'double'. Force output data type [char short int float double].",
            "optional": true,
            "value-choices": [
                "char",
                "short",
                "int",
                "float",
                "double"
            ]
        },
        {
            "id": "field_file",
            "name": "Field file",
            "type": "File",
            "value-key": "[FIELD_FILE]",
            "command-line-flag": "--warp=",
            "description": "An existing file name. File containing warp field.",
            "optional": true
        },
        {
            "id": "in_file",
            "name": "In file",
            "type": "File",
            "value-key": "[IN_FILE]",
            "command-line-flag": "--in=",
            "description": "An existing file name. Image to be warped.",
            "optional": false
        },
        {
            "id": "interp",
            "name": "Interp",
            "type": "String",
            "value-key": "[INTERP]",
            "command-line-flag": "--interp=",
            "description": "'nn' or 'trilinear' or 'sinc' or 'spline'. Interpolation method.",
            "optional": true,
            "value-choices": [
                "nn",
                "trilinear",
                "sinc",
                "spline"
            ]
        },
        {
            "id": "mask_file",
            "name": "Mask file",
            "type": "File",
            "value-key": "[MASK_FILE]",
            "command-line-flag": "--mask=",
            "description": "An existing file name. Filename for mask image (in reference space).",
            "optional": true
        },
        {
            "id": "out_file",
            "name": "Out file",
            "type": "File",
            "value-key": "[OUT_FILE]",
            "command-line-flag": "--out=",
            "description": "A file name. Output filename.",
            "optional": true
        },
        {
            "id": "postmat",
            "name": "Postmat",
            "type": "File",
            "value-key": "[POSTMAT]",
            "command-line-flag": "--postmat=",
            "description": "An existing file name. Filename for post-transform (affine matrix).",
            "optional": true
        },
        {
            "id": "premat",
            "name": "Premat",
            "type": "File",
            "value-key": "[PREMAT]",
            "command-line-flag": "--premat=",
            "description": "An existing file name. Filename for pre-transform (affine matrix).",
            "optional": true
        },
        {
            "id": "ref_file",
            "name": "Ref file",
            "type": "File",
            "value-key": "[REF_FILE]",
            "command-line-flag": "--ref=",
            "description": "An existing file name. Reference image.",
            "optional": false
        },
        {
            "id": "relwarp",
            "name": "Relwarp",
            "type": "Flag",
            "value-key": "[RELWARP]",
            "command-line-flag": "--rel",
            "description": "A boolean. Treat warp field as relative: x' = x + w(x).",
            "optional": true
        },
        {
            "id": "superlevel",
            "name": "Superlevel",
            "type": "String",
            "value-key": "[SUPERLEVEL]",
            "command-line-flag": "--superlevel=",
            "description": "'a' or an integer (int or long). Level of intermediary supersampling, a for 'automatic' or integer level. default = 2.",
            "optional": true,
            "value-choices": [
                "a"
            ]
        },
        {
            "id": "superlevel_2",
            "name": "Superlevel",
            "type": "Number",
            "integer": true,
            "value-key": "[SUPERLEVEL]",
            "command-line-flag": "--superlevel=",
            "description": "'a' or an integer (int or long). Level of intermediary supersampling, a for 'automatic' or integer level. default = 2.",
            "optional": true
        },
        {
            "id": "supersample",
            "name": "Supersample",
            "type": "Flag",
            "value-key": "[SUPERSAMPLE]",
            "command-line-flag": "--super",
            "description": "A boolean. Intermediary supersampling of output, default is off.",
            "optional": true
        }
    ],
    "output-files": [
        {
            "name": "Out file",
            "id": "out_file_outfile",
            "path-template": "[OUT_FILE]",
            "optional": true,
            "description": "An existing file name. Warped output file."
        }
    ],
    "groups": [
        {
            "id": "superlevel_group",
            "name": "Superlevel group",
            "members": [
                "superlevel",
                "superlevel_2"
            ],
            "mutually-exclusive": true
        },
        {
            "id": "mutex_group",
            "name": "Mutex group",
            "members": [
                "abswarp",
                "relwarp"
            ],
            "mutually-exclusive": true
        }
    ],
    "tool-version": "No version provided.",
    "schema-version": "0.5",
    "container-image": {
        "image": "mcin/docker-fsl:latest",
        "type": "docker",
        "index": "index.docker.io"
    }
}