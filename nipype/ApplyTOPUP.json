{
    "name": "ApplyTOPUP",
    "command-line": "nipype_cmd nipype.interfaces.fsl ApplyTOPUP [ARGS] [DATATYPE] [ENCODING_FILE] [ENVIRON] [IN_FILES] [IN_INDEX] [IN_TOPUP_FIELDCOEF] [IN_TOPUP_MOVPAR] [INTERP] [METHOD] [OUT_CORRECTED] [OUTPUT_TYPE]",
    "description": "ApplyTOPUP, as implemented in Nipype (module: nipype.interfaces.fsl, interface: ApplyTOPUP).",
    "inputs": [
        {
            "id": "args",
            "name": "Args",
            "type": "String",
            "value-key": "[ARGS]",
            "description": "A unicode string. Additional parameters to the command.",
            "optional": true
        },
        {
            "id": "datatype",
            "name": "Datatype",
            "type": "String",
            "value-key": "[DATATYPE]",
            "command-line-flag": "-d=",
            "description": "'char' or 'short' or 'int' or 'float' or 'double'. Force output data type.",
            "optional": true,
            "value-choices": [
                "char",
                "short",
                "int",
                "float",
                "double"
            ]
        },
        {
            "id": "encoding_file",
            "name": "Encoding file",
            "type": "File",
            "value-key": "[ENCODING_FILE]",
            "command-line-flag": "--datain=",
            "description": "An existing file name. Name of text file with pe directions/times.",
            "optional": false
        },
        {
            "id": "environ",
            "name": "Environ",
            "type": "String",
            "value-key": "[ENVIRON]",
            "description": "A dictionary with keys which are a bytes or none or a value of class 'str' and with values which are a bytes or none or a value of class 'str'. Environment variables.",
            "optional": true,
            "default-value": {}
        },
        {
            "id": "in_files",
            "name": "In files",
            "type": "File",
            "list": true,
            "value-key": "[IN_FILES]",
            "command-line-flag": "--imain=",
            "description": "A list of items which are an existing file name. Name of file with images.",
            "optional": false
        },
        {
            "id": "in_index",
            "name": "In index",
            "type": "Number",
            "list": true,
            "integer": true,
            "value-key": "[IN_INDEX]",
            "command-line-flag": "--inindex=",
            "description": "A list of items which are an integer (int or long). Comma separated list of indices corresponding to --datain.",
            "optional": true
        },
        {
            "id": "in_topup_fieldcoef",
            "name": "In topup fieldcoef",
            "type": "File",
            "value-key": "[IN_TOPUP_FIELDCOEF]",
            "command-line-flag": "--topup=",
            "description": "An existing file name. Topup file containing the field coefficients.",
            "optional": true
        },
        {
            "id": "in_topup_movpar",
            "name": "In topup movpar",
            "type": "File",
            "value-key": "[IN_TOPUP_MOVPAR]",
            "description": "An existing file name. Topup movpar.txt file.",
            "optional": true
        },
        {
            "id": "interp",
            "name": "Interp",
            "type": "String",
            "value-key": "[INTERP]",
            "command-line-flag": "--interp=",
            "description": "'trilinear' or 'spline'. Interpolation method.",
            "optional": true,
            "value-choices": [
                "trilinear",
                "spline"
            ]
        },
        {
            "id": "method",
            "name": "Method",
            "type": "String",
            "value-key": "[METHOD]",
            "command-line-flag": "--method=",
            "description": "'jac' or 'lsr'. Use jacobian modulation (jac) or least-squares resampling (lsr).",
            "optional": true,
            "value-choices": [
                "jac",
                "lsr"
            ]
        },
        {
            "id": "out_corrected",
            "name": "Out corrected",
            "type": "File",
            "value-key": "[OUT_CORRECTED]",
            "command-line-flag": "--out=",
            "description": "A file name. Output (warped) image.",
            "optional": true
        },
        {
            "id": "output_type",
            "name": "Output type",
            "type": "String",
            "value-key": "[OUTPUT_TYPE]",
            "description": "'nifti' or 'nifti_pair' or 'nifti_gz' or 'nifti_pair_gz'. Fsl output type.",
            "optional": true,
            "value-choices": [
                "NIFTI",
                "NIFTI_PAIR",
                "NIFTI_GZ",
                "NIFTI_PAIR_GZ"
            ]
        }
    ],
    "output-files": [
        {
            "name": "Out corrected",
            "id": "out_corrected_outfile",
            "path-template": "[OUT_CORRECTED]",
            "optional": true,
            "description": "An existing file name. Name of 4d image file with unwarped images."
        }
    ],
    "groups": [
        {
            "id": "all_or_none_group",
            "name": "All or none group",
            "members": [
                "in_topup_fieldcoef",
                "in_topup_movpar"
            ],
            "all-or-none": true
        }
    ],
    "tool-version": "No version provided.",
    "schema-version": "0.5",
    "container-image": {
        "image": "mcin/docker-fsl:latest",
        "type": "docker",
        "index": "index.docker.io"
    }
}